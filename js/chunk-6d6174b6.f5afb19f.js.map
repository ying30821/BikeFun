{"version":3,"sources":["webpack:///./node_modules/wicket/wicket.js","webpack:///./src/views/SearchRoute.vue","webpack:///./src/components/RouteCard.vue","webpack:///./src/components/RouteCard.vue?2785","webpack:///./src/views/SearchRoute.vue?10b7"],"names":["root","factory","this","beginsWith","endsWith","Wkt","obj","_wrapped","str","sub","substring","length","delimiter","isArray","constructor","Array","trim","initializer","wrapVertices","regExes","_stripWhitespaceAndParens","fullStr","trimmed","noParens","replace","components","undefined","read","fromObject","prototype","isCollection","type","slice","sameCoords","a","b","x","y","result","hasOwnProperty","fromJson","deconstruct","call","isRectangle","toObject","config","construct","properties","toString","write","i","j","k","coords","iring","oring","toLowerCase","geometry","coordinates","push","toJson","cs","json","ring","rings","s","ogcTypes","exec","toUpperCase","join","bbox","concat","merge","wkt","prefix","TypeError","matches","typeStr","base","ingest","apply","crudeJson","test","console","log","name","message","JSON","parse","pieces","data","extract","point","String","multipoint","parts","linestring","multilinestring","polygon","multipolygon","box","geometrycollection","split","spaces","parseFloat","numeric","points","comma","multipoints","line","lines","doubleParenComma","parenComma","subcomponents","filter","n","x_cord","y_cord","polygons","class","ref","_createElementVNode","_hoisted_8","id","_hoisted_12","_createVNode","_component_Loading","active","$data","_component_SearchCard","onEmitSearch","$options","city","_ctx","allRouteCity","current_page_data","_createElementBlock","_Fragment","key","_renderList","item","_createBlock","_component_RouteCard","StationUID","cardData","onEmitSetroute","_hoisted_10","_component_Pagination","pages","onEmitUpdate","_hoisted_13","onClick","href","$props","Geometry","_toDisplayString","RouteName","_hoisted_4","City","Town","Direction","_hoisted_9","CyclingLength","_hoisted_11","RoadSectionStart","RoadSectionEnd","props","Object","emits","methods","setRoute","geo","$emit","__exports__","mixins","paginationMixin","SearchCard","RouteCard","Pagination","map","markerLayer","geoLayer","apiData","isLoading","showMap","getRouteData","keyword","api","process","axios","get","then","res","renderRouteCard","catch","err","error","getPage","polyLine","searchRoute","searchData","search","clearLayers","wicket","geojsonFeature","myStyle","color","weight","opacity","L","geoJSON","style","addTo","addData","fitBounds","getBounds","posArr","startPos","endPos","marker","icon","routeIcon","window","screenWidth","document","body","clientWidth","toggleMapAndList","$refs","searchList","classList","add","remove","mounted","initMap","layerGroup","whenReady","render"],"mappings":"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","file":"js/chunk-6d6174b6.f5afb19f.js","sourcesContent":["/** @license\n *\n *  Copyright (C) 2012 K. Arthur Endsley (kaendsle@mtu.edu)\n *  Michigan Tech Research Institute (MTRI)\n *  3600 Green Court, Suite 100, Ann Arbor, MI, 48105\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n(function (root, factory) {\n\n    if (typeof define === \"function\" && define.amd) {\n        // AMD (+ global for extensions)\n        define(function () {\n            return factory();\n        });\n    } else if (typeof module !== 'undefined' && typeof exports === \"object\") {\n        // CommonJS\n        module.exports = factory();\n    } else {\n        // Browser\n        root.Wkt = factory();\n    }\n}(this, function () {\n\n\n    var beginsWith, endsWith, root, Wkt;\n\n    // Establish the root object, window in the browser, or exports on the server\n    root = this;\n\n    /**\n     * @desc The Wkt namespace.\n     * @property    {String}    delimiter   - The default delimiter for separating components of atomic geometry (coordinates)\n     * @namespace\n     * @global\n     */\n    Wkt = function (obj) {\n        if (obj instanceof Wkt) return obj;\n        if (!(this instanceof Wkt)) return new Wkt(obj);\n        this._wrapped = obj;\n    };\n\n\n\n    /**\n     * Returns true if the substring is found at the beginning of the string.\n     * @param   str {String}    The String to search\n     * @param   sub {String}    The substring of interest\n     * @return      {Boolean}\n     * @private\n     */\n    beginsWith = function (str, sub) {\n        return str.substring(0, sub.length) === sub;\n    };\n\n    /**\n     * Returns true if the substring is found at the end of the string.\n     * @param   str {String}    The String to search\n     * @param   sub {String}    The substring of interest\n     * @return      {Boolean}\n     * @private\n     */\n    endsWith = function (str, sub) {\n        return str.substring(str.length - sub.length) === sub;\n    };\n\n    /**\n     * The default delimiter for separating components of atomic geometry (coordinates)\n     * @ignore\n     */\n    Wkt.delimiter = ' ';\n\n    /**\n     * Determines whether or not the passed Object is an Array.\n     * @param   obj {Object}    The Object in question\n     * @return      {Boolean}\n     * @member Wkt.isArray\n     * @method\n     */\n    Wkt.isArray = function (obj) {\n        return !!(obj && obj.constructor === Array);\n    };\n\n    /**\n     * Removes given character String(s) from a String.\n     * @param   str {String}    The String to search\n     * @param   sub {String}    The String character(s) to trim\n     * @return      {String}    The trimmed string\n     * @member Wkt.trim\n     * @method\n     */\n    Wkt.trim = function (str, sub) {\n        sub = sub || ' '; // Defaults to trimming spaces\n        // Trim beginning spaces\n        while (beginsWith(str, sub)) {\n            str = str.substring(1);\n        }\n        // Trim ending spaces\n        while (endsWith(str, sub)) {\n            str = str.substring(0, str.length - 1);\n        }\n        return str;\n    };\n\n    /**\n     * An object for reading WKT strings and writing geographic features\n     * @constructor this.Wkt.Wkt\n     * @param   initializer {String}    An optional WKT string for immediate read\n     * @property            {Array}     components      - Holder for atomic geometry objects (internal representation of geometric components)\n     * @property            {String}    delimiter       - The default delimiter for separating components of atomic geometry (coordinates)\n     * @property            {Object}    regExes         - Some regular expressions copied from OpenLayers.Format.WKT.js\n     * @property            {String}    type            - The Well-Known Text name (e.g. 'point') of the geometry\n     * @property            {Boolean}   wrapVerticies   - True to wrap vertices in MULTIPOINT geometries; If true: MULTIPOINT((30 10),(10 30),(40 40)); If false: MULTIPOINT(30 10,10 30,40 40)\n     * @return              {this.Wkt.Wkt}\n     * @memberof Wkt\n     */\n    Wkt.Wkt = function (initializer) {\n\n        /**\n         * The default delimiter between X and Y coordinates.\n         * @ignore\n         */\n        this.delimiter = Wkt.delimiter || ' ';\n\n        /**\n         * Configuration parameter for controlling how Wicket seralizes\n         * MULTIPOINT strings. Examples; both are valid WKT:\n         * If true: MULTIPOINT((30 10),(10 30),(40 40))\n         * If false: MULTIPOINT(30 10,10 30,40 40)\n         * @ignore\n         */\n        this.wrapVertices = true;\n\n        /**\n         * Some regular expressions copied from OpenLayers.Format.WKT.js\n         * @ignore\n         */\n        this.regExes = {\n            'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n            'spaces': /\\s+|\\+/, // Matches the '+' or the empty space\n            'numeric': /-*\\d+(\\.*\\d+)?/,\n            'comma': /\\s*,\\s*/,\n            'parenComma': /\\)\\s*,\\s*\\(/,\n            'coord': /-*\\d+\\.*\\d+ -*\\d+\\.*\\d+/, // e.g. \"24 -14\"\n            'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,\n            'ogcTypes': /^(multi)?(point|line|polygon|box)?(string)?$/i, // Captures e.g. \"Multi\",\"Line\",\"String\"\n            'crudeJson': /^{.*\"(type|coordinates|geometries|features)\":.*}$/ // Attempts to recognize JSON strings\n        };\n\n        /**\n         * Strip any whitespace and parens from front and back.\n         * This is the equivalent of s/^\\s*\\(?(.*)\\)?\\s*$/$1/ but without the risk of catastrophic backtracking.\n         * @param   str {String}\n         */\n        this._stripWhitespaceAndParens = function (fullStr) {\n            var trimmed = fullStr.trim();\n            var noParens = trimmed.replace(/^\\(?(.*?)\\)?$/, '$1');\n            return noParens;\n        };\n\n        /**\n         * The internal representation of geometry--the \"components\" of geometry.\n         * @ignore\n         */\n        this.components = undefined;\n\n        // An initial WKT string may be provided\n        if (initializer && typeof initializer === 'string') {\n            this.read(initializer);\n        } else if (initializer && typeof initializer !== undefined) {\n            this.fromObject(initializer);\n        }\n\n    };\n\n\n\n    /**\n     * Returns true if the internal geometry is a collection of geometries.\n     * @return  {Boolean}   Returns true when it is a collection\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.isCollection = function () {\n        switch (this.type.slice(0, 5)) {\n            case 'multi':\n                // Trivial; any multi-geometry is a collection\n                return true;\n            case 'polyg':\n                // Polygons with holes are \"collections\" of rings\n                return true;\n            default:\n                // Any other geometry is not a collection\n                return false;\n        }\n    };\n\n    /**\n     * Compares two x,y coordinates for equality.\n     * @param   a   {Object}    An object with x and y properties\n     * @param   b   {Object}    An object with x and y properties\n     * @return      {Boolean}\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.sameCoords = function (a, b) {\n        return (a.x === b.x && a.y === b.y);\n    };\n\n    /**\n     * Sets internal geometry (components) from framework geometry (e.g.\n     * Google Polygon objects or google.maps.Polygon).\n     * @param   obj {Object}    The framework-dependent geometry representation\n     * @return      {this.Wkt.Wkt}   The object itself\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.fromObject = function (obj) {\n        var result;\n\n        if (obj.hasOwnProperty('type') && obj.hasOwnProperty('coordinates')) {\n            result = this.fromJson(obj);\n        } else {\n            result = this.deconstruct.call(this, obj);\n        }\n\n        this.components = result.components;\n        this.isRectangle = result.isRectangle || false;\n        this.type = result.type;\n        return this;\n    };\n\n    /**\n     * Creates external geometry objects based on a plug-in framework's\n     * construction methods and available geometry classes.\n     * @param   config  {Object}    An optional framework-dependent properties specification\n     * @return          {Object}    The framework-dependent geometry representation\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.toObject = function (config) {\n        var obj = this.construct[this.type].call(this, config);\n        // Don't assign the \"properties\" property to an Array\n        if (typeof obj === 'object' && !Wkt.isArray(obj)) {\n            obj.properties = this.properties;\n        }\n        return obj;\n    };\n\n    /**\n     * Returns the WKT string representation; the same as the write() method.\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.toString = function (config) {\n        return this.write();\n    };\n\n    /**\n     * Parses a JSON representation as an Object.\n     * @param\tobj\t{Object}\tAn Object with the GeoJSON schema\n     * @return\t{this.Wkt.Wkt}\tThe object itself\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.fromJson = function (obj) {\n        var i, j, k, coords, iring, oring;\n\n        this.type = obj.type.toLowerCase();\n        this.components = [];\n        if (obj.hasOwnProperty('geometry')) { //Feature\n            this.fromJson(obj.geometry);\n            this.properties = obj.properties;\n            return this;\n        }\n        coords = obj.coordinates;\n\n        if (!Wkt.isArray(coords[0])) { // Point\n            this.components.push({\n                x: coords[0],\n                y: coords[1]\n            });\n\n        } else {\n\n            for (i in coords) {\n                if (coords.hasOwnProperty(i)) {\n\n                    if (!Wkt.isArray(coords[i][0])) { // LineString\n\n                        if (this.type === 'multipoint') { // MultiPoint\n                            this.components.push([{\n                                x: coords[i][0],\n                                y: coords[i][1]\n                            }]);\n\n                        } else {\n                            this.components.push({\n                                x: coords[i][0],\n                                y: coords[i][1]\n                            });\n\n                        }\n\n                    } else {\n\n                        oring = [];\n                        for (j in coords[i]) {\n                            if (coords[i].hasOwnProperty(j)) {\n\n                                if (!Wkt.isArray(coords[i][j][0])) {\n                                    oring.push({\n                                        x: coords[i][j][0],\n                                        y: coords[i][j][1]\n                                    });\n\n                                } else {\n\n                                    iring = [];\n                                    for (k in coords[i][j]) {\n                                        if (coords[i][j].hasOwnProperty(k)) {\n\n                                            iring.push({\n                                                x: coords[i][j][k][0],\n                                                y: coords[i][j][k][1]\n                                            });\n\n                                        }\n                                    }\n\n                                    oring.push(iring);\n\n                                }\n\n                            }\n                        }\n\n                        this.components.push(oring);\n                    }\n                }\n            }\n\n        }\n\n        return this;\n    };\n\n    /**\n     * Creates a JSON representation, with the GeoJSON schema, of the geometry.\n     * @return    {Object}    The corresponding GeoJSON representation\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.toJson = function () {\n        var cs, json, i, j, k, ring, rings;\n\n        cs = this.components;\n        json = {\n            coordinates: [],\n            type: (function () {\n                var i, type, s;\n\n                type = this.regExes.ogcTypes.exec(this.type).slice(1);\n                s = [];\n\n                for (i in type) {\n                    if (type.hasOwnProperty(i)) {\n                        if (type[i] !== undefined) {\n                            s.push(type[i].toLowerCase().slice(0, 1).toUpperCase() + type[i].toLowerCase().slice(1));\n                        }\n                    }\n                }\n\n                return s;\n            }.call(this)).join('')\n        }\n\n        // Wkt BOX type gets a special bbox property in GeoJSON\n        if (this.type.toLowerCase() === 'box') {\n            json.type = 'Polygon';\n            json.bbox = [];\n\n            for (i in cs) {\n                if (cs.hasOwnProperty(i)) {\n                    json.bbox = json.bbox.concat([cs[i].x, cs[i].y]);\n                }\n            }\n\n            json.coordinates = [\n                [\n                    [cs[0].x, cs[0].y],\n                    [cs[0].x, cs[1].y],\n                    [cs[1].x, cs[1].y],\n                    [cs[1].x, cs[0].y],\n                    [cs[0].x, cs[0].y]\n                ]\n            ];\n\n            return json;\n        }\n\n        // For the coordinates of most simple features\n        for (i in cs) {\n            if (cs.hasOwnProperty(i)) {\n\n                // For those nested structures\n                if (Wkt.isArray(cs[i])) {\n                    rings = [];\n\n                    for (j in cs[i]) {\n                        if (cs[i].hasOwnProperty(j)) {\n\n                            if (Wkt.isArray(cs[i][j])) { // MULTIPOLYGONS\n                                ring = [];\n\n                                for (k in cs[i][j]) {\n                                    if (cs[i][j].hasOwnProperty(k)) {\n                                        ring.push([cs[i][j][k].x, cs[i][j][k].y]);\n                                    }\n                                }\n\n                                rings.push(ring);\n\n                            } else { // POLYGONS and MULTILINESTRINGS\n\n                                if (cs[i].length > 1) {\n                                    rings.push([cs[i][j].x, cs[i][j].y]);\n\n                                } else { // MULTIPOINTS\n                                    rings = rings.concat([cs[i][j].x, cs[i][j].y]);\n                                }\n                            }\n                        }\n                    }\n\n                    json.coordinates.push(rings);\n\n                } else {\n                    if (cs.length > 1) { // For LINESTRING type\n                        json.coordinates.push([cs[i].x, cs[i].y]);\n\n                    } else { // For POINT type\n                        json.coordinates = json.coordinates.concat([cs[i].x, cs[i].y]);\n                    }\n                }\n\n            }\n        }\n\n        return json;\n    };\n\n    /**\n     * Absorbs the geometry of another this.Wkt.Wkt instance, merging it with its own,\n     * creating a collection (MULTI-geometry) based on their types, which must agree.\n     * For example, creates a MULTIPOLYGON from a POLYGON type merged with another\n     * POLYGON type, or adds a POLYGON instance to a MULTIPOLYGON instance.\n     * @param   wkt {String}    A Wkt.Wkt object\n     * @return\t{this.Wkt.Wkt}\tThe object itself\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.merge = function (wkt) {\n        var prefix = this.type.slice(0, 5);\n\n        if (this.type !== wkt.type) {\n            if (this.type.slice(5, this.type.length) !== wkt.type) {\n                throw TypeError('The input geometry types must agree or the calling this.Wkt.Wkt instance must be a multigeometry of the other');\n            }\n        }\n\n        switch (prefix) {\n\n            case 'point':\n                this.components = [this.components.concat(wkt.components)];\n                break;\n\n            case 'multi':\n                this.components = this.components.concat((wkt.type.slice(0, 5) === 'multi') ? wkt.components : [wkt.components]);\n                break;\n\n            default:\n                this.components = [\n                    this.components,\n                    wkt.components\n                ];\n                break;\n\n        }\n\n        if (prefix !== 'multi') {\n            this.type = 'multi' + this.type;\n        }\n        return this;\n    };\n\n    /**\n     * Reads a WKT string, validating and incorporating it.\n     * @param   str {String}    A WKT or GeoJSON string\n     * @return\t{this.Wkt.Wkt}\tThe object itself\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.read = function (str) {\n        var matches;\n        matches = this.regExes.typeStr.exec(str);\n        if (matches) {\n            this.type = matches[1].toLowerCase();\n            this.base = matches[2];\n            if (this.ingest[this.type]) {\n                this.components = this.ingest[this.type].apply(this, [this.base]);\n            }\n\n        } else {\n            if (this.regExes.crudeJson.test(str)) {\n                if (typeof JSON === 'object' && typeof JSON.parse === 'function') {\n                    this.fromJson(JSON.parse(str));\n\n                } else {\n                    console.log('JSON.parse() is not available; cannot parse GeoJSON strings');\n                    throw {\n                        name: 'JSONError',\n                        message: 'JSON.parse() is not available; cannot parse GeoJSON strings'\n                    };\n                }\n\n            } else {\n                console.log('Invalid WKT string provided to read()');\n                throw {\n                    name: 'WKTError',\n                    message: 'Invalid WKT string provided to read()'\n                };\n            }\n        }\n\n        return this;\n    }; // eo readWkt\n\n    /**\n     * Writes a WKT string.\n     * @param   components  {Array}     An Array of internal geometry objects\n     * @return              {String}    The corresponding WKT representation\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.write = function (components) {\n        var i, pieces, data;\n\n        components = components || this.components;\n\n        pieces = [];\n\n        pieces.push(this.type.toUpperCase() + '(');\n\n        for (i = 0; i < components.length; i += 1) {\n            if (this.isCollection() && i > 0) {\n                pieces.push(',');\n            }\n\n            // There should be an extract function for the named type\n            if (!this.extract[this.type]) {\n                return null;\n            }\n\n            data = this.extract[this.type].apply(this, [components[i]]);\n            if (this.isCollection() && this.type !== 'multipoint') {\n                pieces.push('(' + data + ')');\n\n            } else {\n                pieces.push(data);\n\n                // If not at the end of the components, add a comma\n                if (i !== (components.length - 1) && this.type !== 'multipoint') {\n                    pieces.push(',');\n                }\n\n            }\n        }\n\n        pieces.push(')');\n\n        return pieces.join('');\n    };\n\n    /**\n     * This object contains functions as property names that extract WKT\n     * strings from the internal representation.\n     * @memberof this.Wkt.Wkt\n     * @namespace this.Wkt.Wkt.extract\n     * @instance\n     */\n    Wkt.Wkt.prototype.extract = {\n        /**\n         * Return a WKT string representing atomic (point) geometry\n         * @param   point   {Object}    An object with x and y properties\n         * @return          {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        point: function (point) {\n            return String(point.x) + this.delimiter + String(point.y);\n        },\n\n        /**\n         * Return a WKT string representing multiple atoms (points)\n         * @param   multipoint  {Array}     Multiple x-and-y objects\n         * @return              {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        multipoint: function (multipoint) {\n            var i, parts = [],\n                s;\n\n            for (i = 0; i < multipoint.length; i += 1) {\n                s = this.extract.point.apply(this, [multipoint[i]]);\n\n                if (this.wrapVertices) {\n                    s = '(' + s + ')';\n                }\n\n                parts.push(s);\n            }\n\n            return parts.join(',');\n        },\n\n        /**\n         * Return a WKT string representing a chain (linestring) of atoms\n         * @param   linestring  {Array}     Multiple x-and-y objects\n         * @return              {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        linestring: function (linestring) {\n            // Extraction of linestrings is the same as for points\n            return this.extract.point.apply(this, [linestring]);\n        },\n\n        /**\n         * Return a WKT string representing multiple chains (multilinestring) of atoms\n         * @param   multilinestring {Array}     Multiple of multiple x-and-y objects\n         * @return                  {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        multilinestring: function (multilinestring) {\n            var i, parts = [];\n\n            if (multilinestring.length) {\n                for (i = 0; i < multilinestring.length; i += 1) {\n                    parts.push(this.extract.linestring.apply(this, [multilinestring[i]]));\n                }\n            } else {\n                parts.push(this.extract.point.apply(this, [multilinestring]));\n            }\n\n            return parts.join(',');\n        },\n\n        /**\n         * Return a WKT string representing multiple atoms in closed series (polygon)\n         * @param   polygon {Array}     Collection of ordered x-and-y objects\n         * @return          {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        polygon: function (polygon) {\n            // Extraction of polygons is the same as for multilinestrings\n            return this.extract.multilinestring.apply(this, [polygon]);\n        },\n\n        /**\n         * Return a WKT string representing multiple closed series (multipolygons) of multiple atoms\n         * @param   multipolygon    {Array}     Collection of ordered x-and-y objects\n         * @return                  {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        multipolygon: function (multipolygon) {\n            var i, parts = [];\n            for (i = 0; i < multipolygon.length; i += 1) {\n                parts.push('(' + this.extract.polygon.apply(this, [multipolygon[i]]) + ')');\n            }\n            return parts.join(',');\n        },\n\n        /**\n         * Return a WKT string representing a 2DBox\n         * @param   multipolygon    {Array}     Collection of ordered x-and-y objects\n         * @return                  {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        box: function (box) {\n            return this.extract.linestring.apply(this, [box]);\n        },\n\n        geometrycollection: function (str) {\n            console.log('The geometrycollection WKT type is not yet supported.');\n        }\n    };\n\n    /**\n     * This object contains functions as property names that ingest WKT\n     * strings into the internal representation.\n     * @memberof this.Wkt.Wkt\n     * @namespace this.Wkt.Wkt.ingest\n     * @instance\n     */\n    Wkt.Wkt.prototype.ingest = {\n\n        /**\n         * Return point feature given a point WKT fragment.\n         * @param   str {String}    A WKT fragment representing the point\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        point: function (str) {\n            var coords = Wkt.trim(str).split(this.regExes.spaces);\n            // In case a parenthetical group of coordinates is passed...\n            return [{ // ...Search for numeric substrings\n                x: parseFloat(this.regExes.numeric.exec(coords[0])[0]),\n                y: parseFloat(this.regExes.numeric.exec(coords[1])[0])\n            }];\n        },\n\n        /**\n         * Return a multipoint feature given a multipoint WKT fragment.\n         * @param   str {String}    A WKT fragment representing the multipoint\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        multipoint: function (str) {\n            var i, components, points;\n            components = [];\n            points = Wkt.trim(str).split(this.regExes.comma);\n            for (i = 0; i < points.length; i += 1) {\n                components.push(this.ingest.point.apply(this, [points[i]]));\n            }\n            return components;\n        },\n\n        /**\n         * Return a linestring feature given a linestring WKT fragment.\n         * @param   str {String}    A WKT fragment representing the linestring\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        linestring: function (str) {\n            var i, multipoints, components;\n\n            // In our x-and-y representation of components, parsing\n            //  multipoints is the same as parsing linestrings\n            multipoints = this.ingest.multipoint.apply(this, [str]);\n\n            // However, the points need to be joined\n            components = [];\n            for (i = 0; i < multipoints.length; i += 1) {\n                components = components.concat(multipoints[i]);\n            }\n            return components;\n        },\n\n        /**\n         * Return a multilinestring feature given a multilinestring WKT fragment.\n         * @param   str {String}    A WKT fragment representing the multilinestring\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        multilinestring: function (str) {\n            var i, components, line, lines;\n            components = [];\n\n            lines = Wkt.trim(str).split(this.regExes.doubleParenComma);\n            if (lines.length === 1) { // If that didn't work...\n                lines = Wkt.trim(str).split(this.regExes.parenComma);\n            }\n\n            for (i = 0; i < lines.length; i += 1) {\n                line = this._stripWhitespaceAndParens(lines[i]);\n                components.push(this.ingest.linestring.apply(this, [line]));\n            }\n\n            return components;\n        },\n\n        /**\n         * Return a polygon feature given a polygon WKT fragment.\n         * @param   str {String}    A WKT fragment representing the polygon\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        polygon: function (str) {\n            var i, j, components, subcomponents, ring, rings;\n            rings = Wkt.trim(str).split(this.regExes.parenComma);\n            components = []; // Holds one or more rings\n            for (i = 0; i < rings.length; i += 1) {\n                ring = this._stripWhitespaceAndParens(rings[i]).split(this.regExes.comma);\n                subcomponents = []; // Holds the outer ring and any inner rings (holes)\n                for (j = 0; j < ring.length; j += 1) {\n                    // Split on the empty space or '+' character (between coordinates)\n                    var split = ring[j].split(this.regExes.spaces);\n                    if (split.length > 2) {\n                        //remove the elements which are blanks\n                        split = split.filter(function (n) {\n                            return n != \"\"\n                        });\n                    }\n                    if (split.length === 2) {\n                        var x_cord = split[0];\n                        var y_cord = split[1];\n\n                        //now push\n                        subcomponents.push({\n                            x: parseFloat(x_cord),\n                            y: parseFloat(y_cord)\n                        });\n                    }\n                }\n                components.push(subcomponents);\n            }\n            return components;\n        },\n\n        /**\n         * Return box vertices (which would become the Rectangle bounds) given a Box WKT fragment.\n         * @param   str {String}    A WKT fragment representing the box\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        box: function (str) {\n            var i, multipoints, components;\n\n            // In our x-and-y representation of components, parsing\n            //  multipoints is the same as parsing linestrings\n            multipoints = this.ingest.multipoint.apply(this, [str]);\n\n            // However, the points need to be joined\n            components = [];\n            for (i = 0; i < multipoints.length; i += 1) {\n                components = components.concat(multipoints[i]);\n            }\n\n            return components;\n        },\n\n        /**\n         * Return a multipolygon feature given a multipolygon WKT fragment.\n         * @param   str {String}    A WKT fragment representing the multipolygon\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        multipolygon: function (str) {\n            var i, components, polygon, polygons;\n            components = [];\n            polygons = Wkt.trim(str).split(this.regExes.doubleParenComma);\n            for (i = 0; i < polygons.length; i += 1) {\n                polygon = this._stripWhitespaceAndParens(polygons[i]);\n                components.push(this.ingest.polygon.apply(this, [polygon]));\n            }\n            return components;\n        },\n\n        /**\n         * Return an array of features given a geometrycollection WKT fragment.\n         * @param   str {String}    A WKT fragment representing the geometry collection\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        geometrycollection: function (str) {\n            console.log('The geometrycollection WKT type is not yet supported.');\n        }\n\n    }; // eo ingest\n\n    return Wkt;\n}));\n","<template>\n  <Loading :active=\"isLoading\" class=\"z-index-500\"></Loading>\n  <div class=\"container-fluid px-0\">\n    <div class=\"row gx-0\">\n      <div class=\"d-md-block col-md-6 col-lg-4 bg-white\" ref=\"searchList\">\n        <div class=\"border-bottom p-1\">\n          <SearchCard @emit-search=\"searchRoute\" :city=\"$filters.allRouteCity\">尋找車道</SearchCard>\n        </div>\n        <div class=\"scrollbar px-1 py-0.75\">\n          <template v-if=\"pagination.current_page_data.length > 0\">\n            <RouteCard v-for=\"item in pagination.current_page_data\" :key=\"item.StationUID\"\n            :cardData=\"item\" @emit-setroute=\"polyLine\">\n          </RouteCard>\n          </template>\n          <p v-else class=\"fs-5 text-center py-1 mb-0\">\n            <i class=\"material-icons-outlined fs-2 align-middle\">search_off</i>\n            目前查無資料 請重新搜尋\n          </p>\n        </div>\n        <Pagination :pages=\"pagination\" @emit-update=\"updatePage\"></Pagination>\n      </div>\n      <div class=\"d-md-block col-md-6 col-lg-8\" ref=\"map\">\n        <div id=\"map\"></div>\n      </div>\n    </div>\n    <div class=\"d-flex d-md-none justify-content-end px-1 py-0.5\">\n      <button @click=\"toggleMapAndList\"\n        class=\"hvr_showMap btn btn-outline-primary bg-secondary px-0.5 py-0.25\">\n        {{ showMap ? \"顯示地圖\" : \"顯示列表\" }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport L from 'leaflet';\nimport Wkt from 'wicket';\nimport {\n  routeIcon,\n  initMap,\n} from '@/methods/map';\n\nimport paginationMixin from '@/mixins/paginationMixin';\nimport Pagination from '@/components/Pagination.vue';\nimport SearchCard from '@/components/SearchCard.vue';\nimport RouteCard from '@/components/RouteCard.vue';\n\nexport default {\n  mixins: [paginationMixin],\n  components: {\n    SearchCard,\n    RouteCard,\n    Pagination,\n  },\n  data() {\n    return {\n      map: '',\n      markerLayer: '',\n      geoLayer: '',\n      apiData: [],\n      isLoading: false,\n      showMap: true,\n    };\n  },\n  methods: {\n    getRouteData(city = 'Taipei', keyword = '') {\n      this.isLoading = true;\n      const api = `${process.env.VUE_APP_BASEAPI}/Cycling/Shape/City/${city}?%24filter=contains(RouteName%2C'${keyword}')&%24format=JSON`;\n      this.axios.get(api)\n        .then((res) => {\n          this.apiData = res.data;\n          this.renderRouteCard();\n        })\n        .catch((err) => {\n          console.error(err);\n        })\n        .then(() => {\n          this.isLoading = false;\n        });\n    },\n    renderRouteCard() {\n      this.getPage();\n      this.polyLine(this.apiData[0].Geometry);\n    },\n    searchRoute(searchData) {\n      const search = searchData;\n      if (!search.city) {\n        search.city = 'Taipei';\n      }\n      this.getRouteData(search.city, search.keyword);\n    },\n    polyLine(geo) {\n      if (this.geoLayer) {\n        this.geoLayer.clearLayers();\n      }\n      if (this.markerLayer) {\n        this.markerLayer.clearLayers();\n      }\n      const wicket = new Wkt.Wkt();\n      const geojsonFeature = wicket.read(geo).toJson();\n      const myStyle = {\n        color: '#C50047',\n        weight: 5,\n        opacity: 0.65,\n      };\n      this.geoLayer = L.geoJSON(geojsonFeature, {\n        style: myStyle,\n      }).addTo(this.map);\n      this.geoLayer.addData(geojsonFeature);\n      this.map.fitBounds(this.geoLayer.getBounds());\n\n      const posArr = geojsonFeature.coordinates[0];\n      const startPos = posArr[0];\n      const endPos = posArr[posArr.length - 1];\n      L.marker([startPos[1], startPos[0]], { icon: routeIcon }).addTo(this.markerLayer);\n      L.marker([endPos[1], endPos[0]], { icon: routeIcon }).addTo(this.markerLayer);\n      window.screenWidth = document.body.clientWidth;\n      if (window.screenWidth < 768) {\n        this.toggleMapAndList();\n      }\n    },\n    toggleMapAndList() {\n      if (this.showMap) {\n        this.$refs.searchList.classList.add('d-none');\n        this.$refs.map.classList.remove('d-none');\n      } else {\n        this.$refs.map.classList.add('d-none');\n        this.$refs.searchList.classList.remove('d-none');\n      }\n      this.showMap = !this.showMap;\n    },\n  },\n  mounted() {\n    this.map = initMap();\n    this.markerLayer = L.layerGroup().addTo(this.map);\n    this.map.whenReady(() => {\n      this.$refs.map.classList.add('d-none');\n    });\n    this.getRouteData();\n  },\n};\n</script>\n","<template>\n<a class=\"card d-block fs-7 text-dark border-0 rounded-3 w-100 mb-1.5\" href=\"#\"\n  @click.prevent=\"setRoute(cardData.Geometry)\">\n  <div class=\"card-body bg-light px-1\">\n    <h2 class=\"h5 mb-0.75\"> {{ cardData.RouteName }} </h2>\n    <p class=\"d-flex align-items-center mb-0.75\">\n      <i class=\"bi bi-geo-alt-fill text-primary fs-4 me-0.5\"></i>\n      <span> {{ cardData.City ? cardData.City : '' }} </span>\n      <span class=\"ms-0.5\"> {{ cardData.Town ? cardData.Town : '' }} </span>\n    </p>\n    <div class=\"d-flex alingn-items-center mb-0.75\">\n      <p class=\"me-3\">\n        <i class=\"material-icons-outlined text-primary fs-4 align-middle me-0.5\">swap_vert</i>\n        <span> {{ cardData.Direction ? cardData.Direction : '單向' }} </span>\n      </p>\n      <p>\n        <i class=\"material-icons-outlined text-primary fs-4 align-middle me-0.5\">route</i>\n        <span> {{ cardData.CyclingLength }}公尺 </span>\n      </p>\n    </div>\n    <p class=\"d-flex align-items-center mb-0.75\">\n      <span class=\"text-primary fs-6 me-0.5\">開始</span>{{ cardData.RoadSectionStart }}\n    </p>\n    <p class=\"d-flex align-items-center\">\n      <span class=\"text-primary fs-6 me-0.5\">結束</span>{{ cardData.RoadSectionEnd }}\n    </p>\n  </div>\n\n</a>\n</template>\n\n<script>\nexport default {\n  props: {\n    cardData: {\n      type: Object,\n    },\n  },\n  emits: ['emitSetroute'],\n  data() {\n    return {\n    };\n  },\n  methods: {\n    setRoute(geo) {\n      this.$emit('emitSetroute', geo);\n    },\n  },\n};\n</script>\n","import { render } from \"./RouteCard.vue?vue&type=template&id=67da3ee4\"\nimport script from \"./RouteCard.vue?vue&type=script&lang=js\"\nexport * from \"./RouteCard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/lumei/Documents/html_code/f2e/bikefun/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./SearchRoute.vue?vue&type=template&id=7f5bf41e\"\nimport script from \"./SearchRoute.vue?vue&type=script&lang=js\"\nexport * from \"./SearchRoute.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/lumei/Documents/html_code/f2e/bikefun/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}